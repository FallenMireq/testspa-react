{"version":3,"sources":["store/actionTypes.js","components/DatePicker.jsx","components/EmailInput.jsx","components/PhoneInput.jsx","components/UserForm.jsx","components/Pagination.jsx","components/UsersTable.jsx","components/UsersOverview.container.jsx","store/actions.js","components/UsersOverview.jsx","App.container.js","App.js","reportWebVitals.js","store/reducers.js","index.js"],"names":["SET_USERS","ADD_USER","SET_PAGE","fromString","str","match","exec","day","month","year","Date","DatePicker","props","dateFormat","locale","selected","value","onChange","onInput","date","getFullYear","padStart","getMonth","getDate","toString","EmailInput","type","e","target","registerLocale","ru","PhoneInput","mask","replace","unmask","onAccept","UserForm","useState","name","setName","setDate","email","setEmail","phone","setPhone","distance","setDistance","payment","setPayment","clear","validation","test","length","formValid","every","x","className","onSubmit","preventDefault","onDone","user","submit","disabled","onClick","Pagination","pages","Array","Math","ceil","total","step","i","page","onGo","map","UsersTable","users","id","pagedUsers","pagination","list","slice","index","UsersOverviewContainer","connect","state","dispatch","setPage","AppContainer","onNewUser","addUser","formCompleted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultUsersState","nextId","defaultPaginationState","url","appReducers","combineReducers","action","forEach","reduce","acc","max","store","createStore","applyMiddleware","thunkMiddleware","a","fetch","json","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAAaA,EAAY,YACZC,EAAW,WACXC,EAAW,W,6CCcxB,SAASC,EAAWC,GAChB,IAAMC,EAAQ,oCAAoCC,KAAKF,GACvD,IAAKC,EACD,OAAO,KAHU,kBAMQA,EANR,GAMZE,EANY,KAMPC,EANO,KAMAC,EANA,KAQrB,OAAO,IAAIC,KAAKD,EAAMD,EAAQ,EAAGD,GAGtB,SAASI,EAAWC,GAC/B,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,OAAO,KACPC,SAAUZ,EAAWS,EAAMI,OAC3BC,SAAU,SAACD,GAAD,OAAWJ,EAAMM,QA5BvC,SAAkBC,GACd,IAAKA,EACD,MAAO,GAGX,IAAMV,GAAQ,GAAKU,EAAKC,eAAeC,SAAS,EAAG,KAC7Cb,GAAS,IAAMW,EAAKG,WAAa,IAAID,SAAS,EAAG,KACjDd,GAAO,GAAKY,EAAKI,WAAWF,SAAS,EAAG,KAC9C,MAAM,GAAN,OAAUd,EAAV,YAAiBC,EAAjB,YAA0BC,GAoBiBe,CAASR,OCjCzC,SAASS,EAAWb,GAC/B,OACI,uBACIc,KAAK,QACLV,MAAOJ,EAAMI,MACbE,QAAS,SAACS,GAAD,OAAOf,EAAMM,QAAQS,EAAEC,OAAOZ,UDFnDa,yBAAe,KAAMC,K,YEDN,SAASC,EAAWnB,GAC/B,OACI,cAAC,IAAD,CACIoB,KAAK,qBACLhB,OAAQJ,EAAMI,OAAS,IAAIiB,QAAQ,MAAO,IAC1CC,QAAQ,EACRC,SAAU,SAACnB,GAAD,OAAWJ,EAAMM,QAAQ,IAAMF,M,OCAtC,SAASoB,EAASxB,GAAQ,IAAD,EACZyB,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAEZF,mBAAS,IAFG,mBAE7BlB,EAF6B,KAEvBqB,EAFuB,OAGVH,mBAAS,IAHC,mBAG7BI,EAH6B,KAGtBC,EAHsB,OAIVL,mBAAS,IAJC,mBAI7BM,EAJ6B,KAItBC,EAJsB,OAKJP,mBAAS,IALL,mBAK7BQ,EAL6B,KAKnBC,EALmB,OAMNT,mBAAS,IANH,mBAM7BU,EAN6B,KAMpBC,EANoB,KAQpC,SAASC,IACLV,EAAQ,IACRC,EAAQ,IACRE,EAAS,IACTE,EAAS,IACTE,EAAY,IACZE,EAAW,IAkBf,IAAME,EAAa,CACfZ,OAAQA,EACRnB,OAAQA,EACRsB,QAASA,GAAS,cAAcU,KAAKV,GACrCE,QAASA,GAA0B,KAAjBA,EAAMS,OACxBP,WAAYA,EACZE,UAAWA,GAAW,QAAQI,KAAKJ,IAGjCM,EAAY,CACdH,EAAWZ,KACXY,EAAW/B,KACX+B,EAAWT,MACXS,EAAWP,MACXO,EAAWL,SACXK,EAAWH,SACbO,OAAM,SAAAC,GAAC,OAAIA,KAEb,OACI,uBAAMC,UAAU,YAAYC,SAAU,SAAC9B,GAAD,OAlC1C,SAAgBA,GACZA,EAAE+B,iBACF9C,EAAM+C,OAAO,CACTV,MAAO,kBAAMA,KACbW,KAAM,CACFtB,OACAnB,OACAsB,QACAE,QACAE,WACAE,aAwBqCc,CAAOlC,IAApD,UACI,sBAAK6B,UAAW,SAAYN,EAAWZ,KAA0B,GAAnB,kBAA9C,UACI,uDACA,uBACIZ,KAAK,OACLV,MAAOsB,EACPpB,QAAS,SAACS,GAAD,OAAOY,EAAQZ,EAAEC,OAAOZ,aAIzC,sBAAKwC,UAAW,SAAYN,EAAW/B,KAA0B,GAAnB,kBAA9C,UACI,8GACA,cAACR,EAAD,CACIK,MAAOG,EACPD,QAAS,SAACF,GAAD,OAAWwB,EAAQxB,SAGpC,sBAAKwC,UAAW,SAAYN,EAAWT,MAA2B,GAAnB,kBAA/C,UACI,0CACA,cAAChB,EAAD,CACIT,MAAOyB,EACPvB,QAAS,SAACF,GAAD,OAAW0B,EAAS1B,SAGrC,sBAAKwC,UAAW,SAAYN,EAAWP,MAA2B,GAAnB,kBAA/C,UACI,+EACA,cAACZ,EAAD,CACIf,MAAO2B,EACPzB,QAAS,SAACF,GAAD,OAAW4B,EAAS5B,SAGrC,sBAAKwC,UAAW,SAAYN,EAAWL,SAA8B,GAAnB,kBAAlD,UACI,2FACA,yBACI7B,MAAO6B,EACP3B,QAAS,SAACS,GAAD,OAAOmB,EAAYnB,EAAEC,OAAOZ,QAFzC,UAII,wBAAQA,MAAM,GAAG8C,UAAQ,EAAzB,iBACA,uCACA,uCACA,8CAGR,sBAAKN,UAAW,SAAYN,EAAWH,QAA6B,GAAnB,kBAAjD,UACI,wGACA,uBACIrB,KAAK,SACLV,MAAO+B,EACP7B,QAAS,SAACS,GAAD,OAAOqB,EAAWrB,EAAEC,OAAOZ,aAG5C,sBAAKwC,UAAU,UAAf,UACI,wBAAQ9B,KAAK,SAASoC,UAAWT,EAAjC,gBACA,wBAAQ3B,KAAK,SAASqC,QAAS,kBAAMd,KAArC,yB,OC9GD,SAASe,EAAWpD,GAG/B,IAFA,IAAMqD,EAAQ,IAAIC,MAAMC,KAAKC,KAAKxD,EAAMyD,MAAQzD,EAAM0D,OAE7CC,EAAI,EAAGA,EAAIN,EAAMb,OAAQmB,IAC9BN,EAAMM,GAAKA,EAAI,EAGnB,OACI,sBAAKf,UAAU,aAAf,UACK5C,EAAM4D,KAAO,GACV,sBAAMT,QAAS,kBAAMnD,EAAM6D,KAAK7D,EAAM4D,KAAO,IAA7C,kBAGHP,EAAMS,KAAI,SAACF,GAAD,OACP,sBAEIT,QAAS,kBAAMnD,EAAM6D,KAAKD,IAC1BhB,UAAWgB,IAAS5D,EAAM4D,KAAO,SAAW,GAHhD,SAKKA,GAJIA,MAQZ5D,EAAMyD,MAAQzD,EAAM4D,KAAO5D,EAAM0D,MAC9B,sBAAMP,QAAS,kBAAMnD,EAAM6D,KAAK7D,EAAM4D,KAAO,IAA7C,qB,OCxBD,SAASG,EAAW/D,GAC/B,OACI,wBAAO4C,UAAU,cAAjB,UACI,gCACI,+BACI,mCACA,oDACA,2GACA,uCACA,4EACA,wFACA,0GAGR,gCACK5C,EAAMgE,MAAMF,KAAI,SAACd,GAAD,OACb,+BACI,6BAAKA,EAAKiB,KACV,6BAAKjB,EAAKtB,OACV,6BAAKsB,EAAKzC,OACV,6BAAKyC,EAAKnB,QACV,6BAAKmB,EAAKjB,QACV,6BAAKiB,EAAKf,WACV,6BAAKe,EAAKb,YAPLa,EAAKiB,YCdlC,SAASC,EAAYF,EAAOG,GAKxB,OAJcH,EAAMI,KAAKC,OACpBF,EAAWP,KAAO,GAAKO,EAAWT,KACnCS,EAAWP,KAAOO,EAAWT,MAElBI,KAAI,SAAAG,GAAE,OAAID,EAAMM,MAAML,MAGzC,IAmBeM,EAFgBC,aAjBP,SAACC,GACrB,MAAO,CACHP,WAAYA,EAAWO,EAAMT,MAAOS,EAAMN,YAC1CP,KAAMa,EAAMN,WAAWP,KACvBF,KAAMe,EAAMN,WAAWT,KACvBD,MAAOgB,EAAMT,MAAMI,KAAK5B,WAIL,SAACkC,GACxB,MAAO,CACHb,KAAM,SAACD,GACHc,ECDL,SAAiBd,GACpB,MAAO,CACH9C,KAAMxB,EACNsE,QDFae,CAAQf,QAKEY,EE1BhB,SAAuBxE,GAClC,OACI,sBAAK4C,UAAW5C,EAAM4C,UAAY,kBAAlC,UACI,cAAC,EAAD,CAAYA,UAAU,8BAA8BoB,MAAOhE,EAAMkE,aACjE,cAAC,EAAD,CAAYN,KAAM5D,EAAM4D,KAAMH,MAAOzD,EAAMyD,MAAOC,KAAM1D,EAAM0D,KAAMG,KAAM,SAACD,GAAD,OAAU5D,EAAM6D,KAAKD,Y,OCH3G,IAcegB,EAFMJ,aAZG,SAACC,GACrB,MAAO,MAGgB,SAACC,GACxB,MAAO,CACHG,UAAW,SAAC7B,GACR0B,EFKL,SAAiB1B,GACpB,MAAO,CACHlC,KAAMzB,EACN2D,QERa8B,CAAQ9B,QAKRwB,ECZN,SAAaxE,GAMxB,OACI,qCACI,cAAC,EAAD,CAAU+C,OAAQ,SAAChC,GAAD,OAP1B,SAAuBA,GACnBf,EAAM6E,UAAU9D,EAAEiC,MAClBjC,EAAEsB,QAK2B0C,CAAchE,MACvC,cAAC,EAAD,CAAe6B,UAAU,8BCDtBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCJRQ,EAAoB,CACtBnB,MAAO,GACPF,KAAM,GACNsB,OAAQ,GAiCZ,IAAMC,EAAyB,CAC3B/B,KAAM,EACNF,KAAM,GAeV,IL/C0BkC,EKoDXC,EALKC,YAAgB,CAChC9B,MAhDJ,WAAmD,IAApCS,EAAmC,uDAA3BgB,EAAmBM,EAAQ,uCAC9C,OAAQA,EAAOjF,MACX,KAAKzB,EACD,IAAI2D,EAAI,2BACD+C,EAAO/C,MADN,IAEJiB,GAAIQ,EAAMiB,SAEd,MAAO,CACHpB,MAAM,2BAAMG,EAAMH,OAAb,kBAAqBtB,EAAKiB,GAAKjB,IACpCoB,KAAK,GAAD,mBAAMK,EAAML,MAAZ,CAAkBpB,EAAKiB,KAC3ByB,OAAQjB,EAAMiB,OAAS,GAE/B,KAAKtG,EACD,IAAIkF,EAAQ,GACRF,EAAO,IAAId,MAAMyC,EAAO/B,MAAMxB,QAMlC,OALAuD,EAAO/B,MAAMgC,SAAQ,SAAChD,EAAMW,GACxBW,EAAMtB,EAAKiB,IAAX,eAAsBjB,GACtBoB,EAAKT,GAAKX,EAAKiB,MAGZ,CACHG,OACAE,QACAoB,OAAQK,EAAO/B,MAAMiC,QAAO,SAACC,EAAKvD,GAAN,OAAYY,KAAK4C,IAAID,EAAKvD,EAAEsB,MAAK,GAAK,GAE1E,QACI,OAAOQ,IAuBfN,WAdJ,WAA6D,IAAzCM,EAAwC,uDAAhCkB,EAAwBI,EAAQ,uCACxD,OAAQA,EAAOjF,MACX,KAAKxB,EACD,OAAO,2BACAmF,GADP,IAEIb,KAAMmC,EAAOnC,OAErB,QACI,OAAOa,MCxCb2B,G,OAAQC,YAAYR,EAAaS,YAAgBC,OAEvDH,EAAM1B,UNLoBkB,EMKD,cNJrB,uCAAO,WAAOlB,GAAP,eAAA8B,EAAA,sEACqBC,MAAMb,GAD3B,8BACiCc,OADjC,OACCC,EADD,OAEHjC,GAViBV,EAUC2C,EAAK3C,MATpB,CACHlD,KAAM1B,EACN4E,WAKG,iCARJ,IAAkBA,IAQd,OAAP,wDMMJ4C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRW,SAASC,eAAe,QAM5BhC,M","file":"static/js/main.9e949f49.chunk.js","sourcesContent":["export const SET_USERS = 'SET_USERS';\nexport const ADD_USER = 'ADD_USER';\nexport const SET_PAGE = 'SET_PAGE';\n","import ReactDatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ru from 'date-fns/locale/ru';\nregisterLocale('ru', ru);\n\nfunction toString(date) {\n    if (!date) {\n        return '';\n    }\n\n    const year = ('' + date.getFullYear()).padStart(4, '0');\n    const month = ('' + (date.getMonth() + 1)).padStart(2, '0');\n    const day = ('' + date.getDate()).padStart(2, '0');\n    return `${day}.${month}.${year}`;\n}\n\nfunction fromString(str) {\n    const match = /^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,4})$/.exec(str);\n    if (!match) {\n        return null;\n    }\n\n    const [, day, month, year] = match;\n\n    return new Date(year, month - 1, day);\n}\n\nexport default function DatePicker(props) {\n    return (\n        <ReactDatePicker\n            dateFormat=\"dd.MM.yyyy\"\n            locale=\"ru\"\n            selected={fromString(props.value)}\n            onChange={(value) => props.onInput(toString(value))}\n        />\n    );\n\n    // return (\n    //     <input\n    //         type=\"date\"\n    //         value={props.value}\n    //         onInput={(e) => props.onInput(e.target.value)}\n    //     />\n    // );\n}\n","export default function EmailInput(props) {\n    return (\n        <input\n            type=\"email\"\n            value={props.value}\n            onInput={(e) => props.onInput(e.target.value)}\n        />\n    );\n}\n","import { IMaskInput } from 'react-imask';\n\nexport default function PhoneInput(props) {\n    return (\n        <IMaskInput\n            mask=\"+{7}(000)000-00-00\"\n            value={(props.value || '').replace(/^\\+/, '')}\n            unmask={true}\n            onAccept={(value) => props.onInput('+' + value)}\n        />\n    );\n\n    // return (\n    //     <input\n    //         type=\"text\"\n    //         value={props.value}\n    //         onInput={(e) => props.onInput(e.target.value)}\n    //     />\n    // );\n}\n","import { useState } from 'react';\n\nimport DatePicker from './DatePicker';\nimport EmailInput from './EmailInput';\nimport PhoneInput from './PhoneInput';\n\nimport './UserForm.css';\n\nexport default function UserForm(props) {\n    const [name, setName] = useState('');\n    const [date, setDate] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [distance, setDistance] = useState('');\n    const [payment, setPayment] = useState('');\n\n    function clear() {\n        setName('');\n        setDate('');\n        setEmail('');\n        setPhone('');\n        setDistance('');\n        setPayment('');\n    }\n\n    function submit(e) {\n        e.preventDefault();\n        props.onDone({\n            clear: () => clear(),\n            user: {\n                name,\n                date,\n                email,\n                phone,\n                distance,\n                payment,\n            },\n        });\n    }\n\n    const validation = {\n        name: !!name,\n        date: !!date,\n        email: !!email && /^.+@.+\\..+$/.test(email),\n        phone: !!phone && phone.length === 12,\n        distance: !!distance,\n        payment: !!payment && /^\\d+$/.test(payment),\n    };\n\n    const formValid = [\n        validation.name,\n        validation.date,\n        validation.email,\n        validation.phone,\n        validation.distance,\n        validation.payment,\n    ].every(x => x);\n\n    return (\n        <form className=\"user-form\" onSubmit={(e) => submit(e)}>\n            <div className={'field' + (!validation.name ? ' field_invalid' : '')}>\n                <label>ФИО</label>\n                <input\n                    type=\"text\"\n                    value={name}\n                    onInput={(e) => setName(e.target.value)}\n                />\n            </div>\n\n            <div className={'field' + (!validation.date ? ' field_invalid' : '')}>\n                <label>Дата рождения</label>\n                <DatePicker\n                    value={date}\n                    onInput={(value) => setDate(value)}\n                />\n            </div>\n            <div className={'field' + (!validation.email ? ' field_invalid' : '')}>\n                <label>Email</label>\n                <EmailInput\n                    value={email}\n                    onInput={(value) => setEmail(value)}\n                />\n            </div>\n            <div className={'field' + (!validation.phone ? ' field_invalid' : '')}>\n                <label>Телефон</label>\n                <PhoneInput\n                    value={phone}\n                    onInput={(value) => setPhone(value)}\n                />\n            </div>\n            <div className={'field' + (!validation.distance ? ' field_invalid' : '')}>\n                <label>Дистанция</label>\n                <select\n                    value={distance}\n                    onInput={(e) => setDistance(e.target.value)}\n                >\n                    <option value=\"\" disabled>---</option>\n                    <option>3</option>\n                    <option>5</option>\n                    <option>10</option>\n                </select>\n            </div>\n            <div className={'field' + (!validation.payment ? ' field_invalid' : '')}>\n                <label>Сумма взноса</label>\n                <input\n                    type=\"number\"\n                    value={payment}\n                    onInput={(e) => setPayment(e.target.value)}\n                />\n            </div>\n            <div className=\"buttons\">\n                <button type=\"submit\" disabled={!formValid}>OK</button>\n                <button type=\"button\" onClick={() => clear()}>\n                    Reset\n                </button>\n            </div>\n        </form>\n    );\n}\n","import './Pagination.css';\n\nexport default function Pagination(props) {\n    const pages = new Array(Math.ceil(props.total / props.step));\n\n    for (let i = 0; i < pages.length; i++) {\n        pages[i] = i + 1;\n    }\n\n    return (\n        <div className=\"pagination\">\n            {props.page > 1 && (\n                <span onClick={() => props.onGo(props.page - 1)}>prev</span>\n            )}\n\n            {pages.map((page) => (\n                <span\n                    key={page}\n                    onClick={() => props.onGo(page)}\n                    className={page === props.page ? 'active' : ''}\n                >\n                    {page}\n                </span>\n            ))}\n\n            {props.total > props.page * props.step && (\n                <span onClick={() => props.onGo(props.page + 1)}>next</span>\n            )}\n        </div>\n    );\n}\n","import './UsersTable.css';\n\nexport default function UsersTable(props) {\n    return (\n        <table className=\"users-table\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>ФИО</th>\n                    <th>Дата рождения</th>\n                    <th>Email</th>\n                    <th>Телефон</th>\n                    <th>Дистанция</th>\n                    <th>Сумма взноса</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.users.map((user) => (\n                    <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.date}</td>\n                        <td>{user.email}</td>\n                        <td>{user.phone}</td>\n                        <td>{user.distance}</td>\n                        <td>{user.payment}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n","import { connect } from 'react-redux';\nimport { setPage } from '../store/actions';\nimport UsersOverview from './UsersOverview';\n\nfunction pagedUsers (users, pagination) {\n    let userIds = users.list.slice(\n        (pagination.page - 1) * pagination.step,\n        pagination.page * pagination.step\n    )\n    return userIds.map(id => users.index[id]);\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pagedUsers: pagedUsers(state.users, state.pagination),\n        page: state.pagination.page,\n        step: state.pagination.step,\n        total: state.users.list.length,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGo: (page) => {\n            dispatch(setPage(page));\n        },\n    };\n};\n\nconst UsersOverviewContainer = connect(mapStateToProps, mapDispatchToProps)(UsersOverview);\n\nexport default UsersOverviewContainer;\n","import { SET_USERS, ADD_USER, SET_PAGE } from './actionTypes';\n\nexport function setUsers(users) {\n    return {\n        type: SET_USERS,\n        users,\n    };\n}\n\nexport function loadUsers(url) {\n    return async (dispatch) => {\n        let data = await (await fetch(url)).json();\n        dispatch(setUsers(data.users));\n    };\n}\n\nexport function addUser(user) {\n    return {\n        type: ADD_USER,\n        user,\n    };\n}\n\nexport function setPage(page) {\n    return {\n        type: SET_PAGE,\n        page,\n    };\n}\n","import Pagination from './Pagination';\nimport UsersTable from './UsersTable';\n\nexport default function UsersOverview(props) {\n    return (\n        <div className={props.className + ' users-overview'}>\n            <UsersTable className=\"users-overview__users-table\" users={props.pagedUsers} />\n            <Pagination page={props.page} total={props.total} step={props.step} onGo={(page) => props.onGo(page)} />\n        </div>\n    );\n}\n","import { connect } from 'react-redux';\nimport { addUser } from './store/actions';\nimport App from './App';\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onNewUser: (user) => {\n            dispatch(addUser(user));\n        },\n    };\n};\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer;\n","import UserForm from './components/UserForm';\nimport UsersOverview from './components/UsersOverview.container';\nimport './App.css';\n\nexport default function App(props) {\n    function formCompleted(e) {\n        props.onNewUser(e.user);\n        e.clear();\n    }\n\n    return (\n        <>\n            <UserForm onDone={(e) => formCompleted(e)} />\n            <UsersOverview className=\"app__users-overview\" />\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { SET_USERS, ADD_USER, SET_PAGE, LOAD_USERS } from './actionTypes';\n\nconst defaultUsersState = {\n    index: {},\n    list: [],\n    nextId: 1,\n};\n\nfunction users(state = defaultUsersState, action) {\n    switch (action.type) {\n        case ADD_USER:\n            let user = {\n                ...action.user,\n                id: state.nextId,\n            };\n            return {\n                index: { ...state.index, [user.id]: user },\n                list: [...state.list, user.id],\n                nextId: state.nextId + 1,\n            };\n        case SET_USERS:\n            let index = {};\n            let list = new Array(action.users.length);\n            action.users.forEach((user, i) => {\n                index[user.id] = { ...user };\n                list[i] = user.id;\n            });\n\n            return {\n                list,\n                index,\n                nextId: action.users.reduce((acc, x) => Math.max(acc, x.id), 0) + 1,\n            };\n        default:\n            return state;\n    }\n}\n\nconst defaultPaginationState = {\n    page: 1,\n    step: 5,\n};\n\nfunction pagination(state = defaultPaginationState, action) {\n    switch (action.type) {\n        case SET_PAGE:\n            return {\n                ...state,\n                page: action.page,\n            };\n        default:\n            return state;\n    }\n}\n\nconst appReducers = combineReducers({\n    users,\n    pagination,\n});\n\nexport default appReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport App from './App.container';\nimport reportWebVitals from './reportWebVitals';\nimport appReducers from './store/reducers';\nimport { loadUsers } from './store/actions';\nimport './index.css';\n\nconst store = createStore(appReducers, applyMiddleware(thunkMiddleware));\n\nstore.dispatch(loadUsers('/users.json'));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}